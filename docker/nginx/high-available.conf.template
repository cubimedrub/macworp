upstream socketio_handler {
    ip_hash;    # make sure the same the channels are processed by the same proxy
    server backend_1:3001;
    server backend_2:3001;
}

upstream backend_handler {
    server backend_3:3001;
    server backend_4:3001;
}

upstream frontend_handler {
    server frontend:5001;
}

server {
    listen 16160 ssl;
    server_name ${NF_HOSTNAME};

    ssl_certificate     /etc/custom_ssl/cert.pem;
    ssl_certificate_key /etc/custom_ssl/key.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    # Adjust handling of client body 
    client_max_body_size 25G;
    client_body_buffer_size 100M;

    # Make files sending more efficient
    sendfile on;
    tcp_nopush on;

    add_header Access-Control-Allow-Origin *;
    add_header Access-Control-Allow-Methods *;
    add_header Access-Control-Expose-Headers Content-Type;

    # Deliver fast requests
    location ~ ^/api {
        # Disable buffering of upstream responses.
        proxy_buffering             off;
        # Set proxy headers for Flask
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto "https";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        # Disable passing on to next upstreamserver
        # proxy_next_upstream off;
        # Adjust timeouts
        proxy_connect_timeout       20s;
        proxy_send_timeout          20s;
        proxy_read_timeout          20s;
        send_timeout                20s;
        proxy_pass http://backend_handler;
    }

    location /socket.io {
        add_header X-Debug "sock location";
        proxy_http_version 1.1;
        proxy_buffering off;
        proxy_redirect off;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_pass http://socketio_handler/socket.io;
    } 

    # Deliver frontend
    location / {
        # Disable buffering of upstream responses.
        proxy_buffering             off;
        # Set proxy headers for Flask
        proxy_set_header X-Real-IP  $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_redirect off;
        proxy_pass http://frontend_handler;
    }
}

server {
    listen 16161 ssl;
    server_name ${NF_HOSTNAME};

    ssl_certificate     /etc/custom_ssl/cert.pem;
    ssl_certificate_key /etc/custom_ssl/key.pem;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    location / {
        proxy_set_header Host $host;
	    proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port 16161;
	    proxy_set_header X-Forwarded-Proto $scheme;
        proxy_redirect off;
        proxy_pass http://fusionauth:9011;
    }
}