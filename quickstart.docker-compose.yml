# Use in addition to docker-compose.yaml to test the deployment with unicorn and NginX as reverse proxy, see Readme.md
name: macworp-deployment-test
services:  
  backend_1: &migrating_backend
    image: cubimedrub/macworp-backend:local
    volumes:
      - ./macworp:/home/mambauser/macworp
      - ./quickstart_uploads:/home/mambauser/uploads
      # Pass the local config
      - ./quickstart.config.yml:/home/mambauser/local.config.yaml:ro
      - ./dev_auth.yaml:/home/mambauser/dev_auth.yaml:ro
      - ./demo_workflows:/home/mambauser/demo_workflows:ro
    environment:
      # Backend 1 runs migration and database seeding
      RUN_MIGRATION: "true"
      RUN_SEED: "true"
      OAUTHLIB_INSECURE_TRANSPORT: 1
      MACWORP_HOSTNAME: ${MACWORP_HOSTNAME:-localhost}
      MACWORP_FUSIONAUTH_PORT: ${MACWORP_FUSIONAUTH_PORT:-9011}
      MIGRATION_DB_HOSTNAME: psql
      PYTHONUNBUFFERED: "true"
      MACWORP_CONFIG: /home/mambauser/local.config.yaml
    command: ["serve", "--gunicorn"]
    depends_on:
      psql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  backend_2: &backend
    <<: *migrating_backend
    environment:
      # Disable migration and seeding for the other backends
      RUN_MIGRATION: "false"
      RUN_SEED: "false"
      OAUTHLIB_INSECURE_TRANSPORT: 1
      MACWORP_HOSTNAME: ${MACWORP_HOSTNAME:-localhost}
      MACWORP_FUSIONAUTH_PORT: ${MACWORP_FUSIONAUTH_PORT:-9011}
      PYTHONUNBUFFERED: "true"
      MACWORP_CONFIG: /home/mambauser/local.config.yaml
    depends_on:
      - backend_1
  backend_3: *backend
  backend_4: *backend
  frontend:
    image: cubimedrub/macworp-frontend:local
    environment:
      MACWORP_BACKEND_BASE_URL: https://${MACWORP_HOSTNAME:-localhost}:16160
      MACWORP_BACKEND_WS_URL: https://${MACWORP_HOSTNAME:-localhost}:16160
      MACWORP_FRONTEND_INTERFACE: 0.0.0.0
      MACWORP_UPLOAD_MAX_FILE_SITE: 10737418240
      MACWORP_DISABLE_SSL_VERIFICATION: "true"
  nginx:
    image: nginx:stable
    ports:
      - 16160:16160
      - 16161:16161
    environment:
      MACWORP_HOSTNAME: ${MACWORP_HOSTNAME}
    volumes:
      - ./docker/nginx/certificate-creation.sh:/docker-entrypoint.d/99-certificates.sh:ro
      - ./docker/nginx/high-available.conf.template:/etc/nginx/templates/default.conf.template:ro
    depends_on:
      - backend_1
      - backend_2
      - backend_3
      - backend_4
      - frontend
      - fusionauth
    links:
      - backend_1
      - backend_2
      - backend_3
      - backend_4
      - frontend
      - fusionauth
  worker:
    image: cubimedrub/macworp-worker:local
    environment:
      PYTHONUNBUFFERED: "true"
    command: [
      "-vvvvvvvv",
      "--skip-cert-verification",
      "-n", "/usr/local/bin/nextflow",
      "-s", "/opt/conda/envs/macworp/bin/snakemake",
      "-c", "https://${MACWORP_HOSTNAME:-localhost}:16160",
      "-r", "amqp://admin:developer@rabbitmq:5672/%2f",
      "-q", "project_workflow",
      "-d", "${PROJECT_DIR_ABSOLUTE}",
      "-u", "worker",
      "-p", "developer",
      "--keep-intermediate-files"
    ]
    volumes:
      # Mount the demo workflows
      - ./demo_workflows:/home/mambauser/demo_workflows:ro
      # To be able to run docker commands from the worker container it is necessary
      # to mount the hosts Docker socket into the container
      # and make the project directory available on the same absolute path
      - ${DOCKER_SOCKET_PATH}:/var/run/docker.sock:ro
      - ${PROJECT_DIR_ABSOLUTE}:${PROJECT_DIR_ABSOLUTE}
    depends_on:
      - nginx
      - rabbitmq
