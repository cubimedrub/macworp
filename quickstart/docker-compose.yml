# Use in addition to docker-compose.yaml to test the deployment with unicorn and NginX as reverse proxy, see Readme.md
name: macworp-deployment-test
services:  
  backend_1: &migrating_backend
    image: ${MACWORP_CONTAINER}
    volumes:
      - ${PROJECT_DIR_ABSOLUTE}:${PROJECT_DIR_ABSOLUTE}
      # Pass the local config
      - ./quickstart/config.yml:/home/mambauser/local.config.yml:ro
      - ./dev.users.yml:/home/mambauser/dev.users.yml:ro
      - ./demo_workflows:/home/mambauser/demo_workflows:ro
      - ./db_seed.yml:/home/mambauser/db_seed.yml:ro
    environment:
      # Backend 1 runs migration and database seeding
      RUN_MIGRATION: /home/mambauser/local.config.yml
      RUN_SEED: /home/mambauser/local.config.yml
      PROJECTS_DIR: ${PROJECT_DIR_ABSOLUTE}
      OAUTHLIB_INSECURE_TRANSPORT: 1
      MACWORP_HOSTNAME: ${MACWORP_HOSTNAME:-localhost}
      MACWORP_FUSIONAUTH_PORT: ${MACWORP_FUSIONAUTH_PORT:-9011}
      PYTHONUNBUFFERED: "true"
    command: ["--config", "/home/mambauser/local.config.yml", "backend:start"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/healthcheck/ping"]
      interval: 10s
      timeout: 10s
      retries: 10
    depends_on:
      psql:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  backend_2: &backend
    <<: *migrating_backend
    environment:
      PROJECTS_DIR: ${PROJECT_DIR_ABSOLUTE}
      OAUTHLIB_INSECURE_TRANSPORT: 1
      MACWORP_HOSTNAME: ${MACWORP_HOSTNAME:-localhost}
      MACWORP_FUSIONAUTH_PORT: ${MACWORP_FUSIONAUTH_PORT:-9011}
      PYTHONUNBUFFERED: "true"
    depends_on:
      backend_1:
        condition: service_healthy
  backend_3: *backend
  backend_4: *backend
  frontend:
    image: ${MACWORP_CONTAINER}
    volumes:
      - ${PROJECT_DIR_ABSOLUTE}:${PROJECT_DIR_ABSOLUTE}
      # Pass the local config
      - ./quickstart/config.yml:/home/mambauser/local.config.yml:ro
    environment:
      PROJECTS_DIR: ${PROJECT_DIR_ABSOLUTE}
      MACWORP_HOSTNAME: ${MACWORP_HOSTNAME:-localhost}
      MACWORP_FUSIONAUTH_PORT: ${MACWORP_FUSIONAUTH_PORT:-9011}
    command: ["--config", "/home/mambauser/local.config.yml", "frontend:start"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001/healthcheck/ping"]
      interval: 5s
      timeout: 10s
      retries: 40
    depends_on:
      backend_1:
        condition: service_healthy
  nginx:
    image: nginx:stable
    ports:
      - 16160:16160
      - 16161:16161
    environment:
      MACWORP_HOSTNAME: ${MACWORP_HOSTNAME}
    volumes:
      - ./docker/nginx/high-available.conf.template:/etc/nginx/templates/default.conf.template:ro
      - ./quickstart/ssl:/etc/custom_ssl:ro
    healthcheck:
      test: ["CMD", "curl", "-k", "-f", "--user-agent", "curl/healthcheck", "https://${MACWORP_HOSTNAME}:16160/api/healthcheck/ping"]
      interval: 5s
      timeout: 10s
      retries: 40
    depends_on:
      backend_1:
        condition: service_healthy
      backend_2:
        condition: service_healthy
      backend_3:
        condition: service_healthy
      backend_4:
        condition: service_healthy
      frontend:
        condition: service_healthy
      fusionauth:
        condition: service_started
    links:
      - backend_1
      - backend_2
      - backend_3
      - backend_4
      - frontend
      - fusionauth
  worker:
    image: ${MACWORP_CONTAINER}
    cap_add:
      - SYS_ADMIN
    devices:
      - /dev/fuse
    environment:
      PYTHONUNBUFFERED: "true"
      PROJECTS_DIR: ${PROJECT_DIR_ABSOLUTE}
    command: ["--config", "/home/mambauser/local.config.yml", "worker:start"]
    volumes:
      - ${PROJECT_DIR_ABSOLUTE}:${PROJECT_DIR_ABSOLUTE}
      # Pass the local config
      - ./quickstart/config.yml:/home/mambauser/local.config.yml:ro
    depends_on:
      nginx:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
